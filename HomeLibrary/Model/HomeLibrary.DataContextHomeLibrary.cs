//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 19.05.2023 10:44:19
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace HomeLibrary
{

    [DatabaseAttribute(Name = "home_library")]
    [ProviderAttribute(typeof(Devart.Data.MySql.Linq.Provider.MySqlDataProvider))]
    public partial class DataContextHomeLibrary : Devart.Data.Linq.DataContext
    {
        public static CompiledQueryCache compiledQueryCache = CompiledQueryCache.RegisterDataContext(typeof(DataContextHomeLibrary));
        private static MappingSource mappingSource = new Devart.Data.Linq.Mapping.AttributeMappingSource();

        #region Extensibility Method Definitions
    
        partial void OnCreated();
        partial void OnSubmitError(Devart.Data.Linq.SubmitErrorEventArgs args);
        partial void InsertBook(Book instance);
        partial void UpdateBook(Book instance);
        partial void DeleteBook(Book instance);
        partial void InsertAuthor(Author instance);
        partial void UpdateAuthor(Author instance);
        partial void DeleteAuthor(Author instance);
        partial void InsertPublisher(Publisher instance);
        partial void UpdatePublisher(Publisher instance);
        partial void DeletePublisher(Publisher instance);
        partial void InsertPerson(Person instance);
        partial void UpdatePerson(Person instance);
        partial void DeletePerson(Person instance);
        partial void InsertCheckout(Checkout instance);
        partial void UpdateCheckout(Checkout instance);
        partial void DeleteCheckout(Checkout instance);
        partial void InsertGenre(Genre instance);
        partial void UpdateGenre(Genre instance);
        partial void DeleteGenre(Genre instance);

        #endregion

        public DataContextHomeLibrary() :
        base(@"User Id=User1;Password=dba2ilv;Host=127.0.0.1;Database=home_library;Persist Security Info=True", mappingSource)
        {
            OnCreated();
        }

        public DataContextHomeLibrary(MappingSource mappingSource) :
        base(@"User Id=User1;Password=dba2ilv;Host=127.0.0.1;Database=home_library;Persist Security Info=True", mappingSource)
        {
            OnCreated();
        }

        public DataContextHomeLibrary(string connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public DataContextHomeLibrary(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public DataContextHomeLibrary(string connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public DataContextHomeLibrary(System.Data.IDbConnection connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Devart.Data.Linq.Table<Book> Books
        {
            get
            {
                return this.GetTable<Book>();
            }
        }

        public Devart.Data.Linq.Table<Author> Authors
        {
            get
            {
                return this.GetTable<Author>();
            }
        }

        public Devart.Data.Linq.Table<Publisher> Publishers
        {
            get
            {
                return this.GetTable<Publisher>();
            }
        }

        public Devart.Data.Linq.Table<Person> People
        {
            get
            {
                return this.GetTable<Person>();
            }
        }

        public Devart.Data.Linq.Table<Checkout> Checkouts
        {
            get
            {
                return this.GetTable<Checkout>();
            }
        }

        public Devart.Data.Linq.Table<Genre> Genres
        {
            get
            {
                return this.GetTable<Genre>();
            }
        }
    }
}
